{"version":3,"sources":["Content/Content.Component.js","Title/Title.Component.js","Projects/Projects.Component.js","App/App.js","serviceWorker.js","index.js"],"names":["PicComponent","react_default","a","createElement","className","Component","ContentComponet","Content_Component_PicComponent","TitleElement","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClick","bind","assertThisInitialized","pageName","props","name","pageUrl","window","location","assign","console","log","onClick","type","Logo","TitleComponent","Title_Component_Logo","Title_Component_TitleElement","App","Title_Title_Component","Content_Content_Component","Boolean","hostname","match","ReactDOM","render","src_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oSAIMA,gMAEE,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,WAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,uBACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAb,qCAVGC,cA2BZC,mLALP,OACIL,EAAAC,EAAAC,cAACI,EAAD,aAHkBF,oBCpBxBG,SCF0BH,wBDG5B,SAAAG,IAAa,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACTC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,YAAcP,EAAKO,YAAYC,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAFVA,6EAMT,IAAIU,EAAWP,KAAKQ,MAAMC,KACtBC,EAAW,IAAMH,EAAW,QAEf,SAAbA,IACAG,EAAW,wCAEfC,OAAOC,SAASC,OAAOH,GACvBI,QAAQC,IAAIL,oCAKZ,IAAMD,EAAOT,KAAKQ,MAAMC,KACxB,OACIpB,EAAAC,EAAAC,cAAA,UAAQyB,QAAShB,KAAKI,YAAaa,KAAK,SAASzB,UAAU,8CAA8CiB,UArB1FhB,cA0BrByB,mLAEE,OACI7B,EAAAC,EAAAC,cAAA,UAAQ0B,KAAK,SAASzB,UAAU,yCAAwCH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,wBAHjEC,aA0BJ0B,mLAfP,OACI9B,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC6B,EAAD,MAEA/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACXH,EAAAC,EAAAC,cAAC8B,EAAD,CAAcZ,KAAK,SACnBpB,EAAAC,EAAAC,cAAC8B,EAAD,CAAcZ,KAAK,aACnBpB,EAAAC,EAAAC,cAAC8B,EAAD,CAAcZ,KAAK,kBATVhB,aEnBd6B,mLAVT,OACEjC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACgC,EAAD,MACAlC,EAAAC,EAAAC,cAACiC,EAAD,cALQ/B,aCIEgC,QACW,cAA7Bd,OAAOC,SAASc,UAEe,UAA7Bf,OAAOC,SAASc,UAEhBf,OAAOC,SAASc,SAASC,MACvB,iECTNC,IAASC,OAAOxC,EAAAC,EAAAC,cAACuC,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.728ca8c9.chunk.js","sourcesContent":["\nimport React, { Component } from 'react';\nimport './Content.Component.css';\n\nclass PicComponent extends Component{\n    render(){\n        return (\n            <div className=\"container\">\n                <div className=\"row align-items-center h-100 \">\n                    <div className=\"col-6 mx-auto\">\n                        <p className='homeContent'>\n                            Welcome\n                        </p> \n                        <hr className=\"hr-light my-4 w-75\"></hr>\n                        <p className='homeIntro'>\n                            This is Jade's homepage\n                        </p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nclass ContentComponet extends Component{\n    render(){\n        return(           \n            <PicComponent/>\n        ) \n    }\n}\nexport default ContentComponet;","import React, { ReactDOM, Component } from 'react';\nimport './Title.Component.css';\nimport ProjectsComponent from '../Projects/Projects.Component';\n\nclass TitleElement extends Component{\n    constructor(){\n        super();\n        this.handleClick = this.handleClick.bind(this);\n    }\n       \n    handleClick() {\n        var pageName = this.props.name;\n        var pageUrl =  '/' + pageName + \".html\";\n\n        if( pageName === 'Home'){\n            pageUrl =  'https://hjwang95.github.io/home_app/' ;\n        }\n        window.location.assign(pageUrl);\n        console.log(pageUrl);\n\n    }\n\n    render () {\n        const name = this.props.name;\n        return (\n            <button onClick={this.handleClick} type=\"button\" className=\"btn btn-outline-info btn-margin btn-circle\">{name}</button>   \n        )\n      }\n}\n\nclass Logo extends Component{\n    render(){\n        return (\n            <button type=\"button\" className=\"btn btn-default btn-margin btn-circle\"><i className=\"material-icons\">filter_drama</i></button>   \n        )\n    }\n}\n\n\nclass TitleComponent extends Component{\n    render () {\n        return (\n            <div>\n                <Logo />\n\n                <div className=\"btn-toolbar btn-toolbar-margin float-right\">\n                    <TitleElement name='Home'/>\n                    <TitleElement name='Projects'/>\n                    <TitleElement name='Life'/>\n                </div>\n            </div>\n            \n        )\n      }\n}\n\nexport default TitleComponent\n\n\n\n// <!-- Main navigation -->\n// <header>\n//   <!-- Navbar -->\n//   <nav class=\"navbar navbar-expand-lg navbar-dark fixed-top scrolling-navbar\">\n//     <div class=\"container\">\n//       <a class=\"navbar-brand\" href=\"#\">Navbar</a>\n//       <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n//         <span class=\"navbar-toggler-icon\"></span>\n//       </button>\n//       <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n//         <ul class=\"navbar-nav mr-auto smooth-scroll\">\n//           <li class=\"nav-item\">\n//             <a class=\"nav-link\" href=\"#home\">Home\n//               <span class=\"sr-only\">(current)</span>\n//             </a>\n//           </li>\n//           <li class=\"nav-item\">\n//             <a class=\"nav-link\" href=\"#about\" data-offset=\"90\">About</a>\n//           </li>\n//         </ul>\n//         <!-- Social Icon  -->\n//         <ul class=\"navbar-nav nav-flex-icons\">\n//           <li class=\"nav-item\">\n//             <a class=\"nav-link\">\n//               <i class=\"fab fa-facebook-f light-green-text-2\"></i>\n//             </a>\n//           </li>\n//           <li class=\"nav-item\">\n//             <a class=\"nav-link\">\n//               <i class=\"fab fa-twitter light-green-text-2\"></i>\n//             </a>\n//           </li>\n//           <li class=\"nav-item\">\n//             <a class=\"nav-link\">\n//               <i class=\"fas fa-instagram light-green-text-2\"></i>\n//             </a>\n//           </li>\n//         </ul>\n//       </div>\n//     </div>\n//   </nav>","import React, { Component } from 'react';\n\nclass ProjectsComponent extends Component{\n  render(){\n    return (<div>pnejkfnwj </div>)\n  }\n}\nexport default ProjectsComponent","import React, { Component } from 'react';\n// import logo from './images/logo.png';\nimport './App.css';\nimport ContentComponet from '../Content/Content.Component';\nimport TitleComponent from '../Title/Title.Component'\n\n\n\nclass App extends Component {\n  render() {\n      return (\n        <div>\n          <TitleComponent></TitleComponent>\n          <ContentComponet></ContentComponet>\n        </div>\n        \n      )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\nimport ProjectsComponent from './Projects/Projects.Component';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nfunction reRender(){\n    ReactDOM.render(ProjectsComponent, document.getElementById('root'))\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}